plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
    id 'org.sonarqube' version '6.3.1.5724'
}

group = 'com.acme.mutualfund'
version = '0.0.1-SNAPSHOT'

java {
    toolchain { languageVersion = JavaLanguageVersion.of(25) }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly { extendsFrom annotationProcessor }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'  // jakarta.validation.*
    implementation 'org.springframework.boot:spring-boot-starter-security'    // Security classes

    //Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'  // /swagger-ui

    //Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    // Database
    implementation "org.flywaydb:flyway-core:11.7.2"
    implementation "org.flywaydb:flyway-database-postgresql:11.7.2"  // <-- add this
    runtimeOnly "org.postgresql:postgresql:42.7.4"

    // Open Telemetry
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("io.micrometer:micrometer-observation")
    implementation("io.micrometer:micrometer-tracing")
    implementation("io.micrometer:micrometer-registry-otlp")
    implementation("io.micrometer:micrometer-tracing-bridge-otel")

    //log
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.h2database:h2:2.3.232"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacoco {
    toolVersion = "0.8.13"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport)
}

tasks.jacocoTestReport {
    dependsOn tasks.test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

// Helpful defaults for reproducible builds & faster CI
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}


